//
// WS
// KeymapUNIX.h
//
// Copyright Â© 2020 Gustavo C. Viegas.
//

#ifndef YF_WS_KEYMAPUNIX_H
#define YF_WS_KEYMAPUNIX_H

#include "Keyboard.h"

WS_NS_BEGIN

#if defined(__linux__)
/// Converts to a `KeyCode` value.
///
inline KeyCode toKeyCodeUNIX(uint32_t code) {
  // Mapping between linux event codes and `KeyCode` values.
  static constexpr KeyCode keymap[] = {
    KeyCodeUnknown,
    KeyCodeEsc,
    KeyCode1,
    KeyCode2,
    KeyCode3,
    KeyCode4,
    KeyCode5,
    KeyCode6,
    KeyCode7,
    KeyCode8,
    KeyCode9,
    KeyCode0,
    KeyCodeMinus,
    KeyCodeEqual,
    KeyCodeBackspace,
    KeyCodeTab,
    KeyCodeQ,
    KeyCodeW,
    KeyCodeE,
    KeyCodeR,
    KeyCodeT,
    KeyCodeY,
    KeyCodeU,
    KeyCodeI,
    KeyCodeO,
    KeyCodeP,
    KeyCodeLBracket,
    KeyCodeRBracket,
    KeyCodeReturn,
    KeyCodeLCtrl,
    KeyCodeA,
    KeyCodeS,
    KeyCodeD,
    KeyCodeF,
    KeyCodeG,
    KeyCodeH,
    KeyCodeJ,
    KeyCodeK,
    KeyCodeL,
    KeyCodeSemicolon,
    KeyCodeApostrophe,
    KeyCodeGrave,
    KeyCodeLShift,
    KeyCodeBackslash,
    KeyCodeZ,
    KeyCodeX,
    KeyCodeC,
    KeyCodeV,
    KeyCodeB,
    KeyCodeN,
    KeyCodeM,
    KeyCodeComma,
    KeyCodeDot,
    KeyCodeSlash,
    KeyCodeRShift,
    KeyCodePadStar,
    KeyCodeLAlt,
    KeyCodeSpace,
    KeyCodeCapsLock,
    KeyCodeF1,
    KeyCodeF2,
    KeyCodeF3,
    KeyCodeF4,
    KeyCodeF5,
    KeyCodeF6,
    KeyCodeF7,
    KeyCodeF8,
    KeyCodeF9,
    KeyCodeF10,
    KeyCodePadNumLock,
    KeyCodeScrollLock,
    KeyCodePad7,
    KeyCodePad8,
    KeyCodePad9,
    KeyCodePadMinus,
    KeyCodePad4,
    KeyCodePad5,
    KeyCodePad6,
    KeyCodePadPlus,
    KeyCodePad1,
    KeyCodePad2,
    KeyCodePad3,
    KeyCodePad0,
    KeyCodePadDot,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeF11,
    KeyCodeF12,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodePadEnter,
    KeyCodeRCtrl,
    KeyCodePadSlash,
    KeyCodeSysrq,
    KeyCodeRAlt,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUp,
    KeyCodePageUp,
    KeyCodeLeft,
    KeyCodeRight,
    KeyCodeEnd,
    KeyCodeDown,
    KeyCodePageDown,
    KeyCodeInsert,
    KeyCodeDelete,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodePadEqual,
    KeyCodeUnknown,
    KeyCodePause,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeLMeta,
    KeyCodeRMeta,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeUnknown,
    KeyCodeF13,
    KeyCodeF14,
    KeyCodeF15,
    KeyCodeF16,
    KeyCodeF17,
    KeyCodeF18,
    KeyCodeF19,
    KeyCodeF20,
    KeyCodeF21,
    KeyCodeF22,
    KeyCodeF23,
    KeyCodeF24
  };

  static constexpr size_t keymapN = sizeof keymap / sizeof keymap[0];
  return code < keymapN ? keymap[code] : KeyCodeUnknown;
}
#else
// TODO
# error "Invalid platform"
#endif // defined(__linux__)

WS_NS_END

#endif // YF_WS_KEYMAPUNIX_H
